import Head from 'next/head'
import _ from 'lodash';
import {SearchIcon,ClockIcon,ArrowCircleUpIcon,XIcon} from  "@heroicons/react/outline";
import { useRef,useContext, useState } from 'react';
import {useRouter} from 'next/router'
import { SearchOptionContext } from "../contexts/SearchOptionContext";
import Recommendation from '../components/Recommendation/Recommendation';
export default function Home() {
  const router=useRouter();
  const searchInputRef=useRef(null);
  const {searchTerm,setSearchTerm,searchOption} = useContext(SearchOptionContext)
  const [showHistory, setShowHistory]= useState(false);
  const [term, setTerm] = useState('');
  const [key, setKey] = useState(Date.now());
  const search=e=>{
    e.preventDefault();
    if(!term) return;
    /* const term= searchInputRef.current.value;
    setSearchTerm(term); */
    const searchHistory=( JSON.parse(localStorage.getItem("searchHistory")) || []).filter(item=>{
      if(term===item.term) return false;
      return true;
    });

    searchHistory.unshift({term:term});
    localStorage.setItem('searchHistory',JSON.stringify(searchHistory));
    setKey(Date.now());
    router.push(`/search?term=${term}&type=${searchOption}`);
  }
  const toggleShowHistory=()=>{
    setShowHistory(!showHistory);
  }
  return (
    <div >
      <Head>
        <title>MySearch</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
    
      {/* Body */}
      <form className=" flex flex-col items-center mt-20">
        <h1 className="text-6xl sm:text-7xl lg:text-8xl leading-none font-bold tracking-tight mt-6 sm:mt-8 mb-1 sm:mb-5">
          My
          <span
            className="bg-clip-text bg-gradient-to-r from-primary-500 to-primary-800 tracking-tight px-1"
            style={{ color: "transparent" }}
          >
            Search
          </span>
        </h1>
        <div className={` w-full mt-5  relative
           max-w-md sm:max-w-xl lg:max-w-2xl border border-gray-200
             ${showHistory?'rounded-t-3xl':'rounded-3xl hover:shadow-lg '}`}
           onClick={toggleShowHistory}>

          <div className="flex items-center px-5 py-3 ">
            {showHistory?
            <ArrowCircleUpIcon className="h-6 mr-1 text-gray-500 hover:scale-110 hover:text-black  cursor-pointer " /> :
            <SearchIcon className="h-6 mr-1 text-gray-500 " />}
            
            <input ref={searchInputRef} value={term}
            type="text" className=" focus:outline-none flex-grow "
            onChange={e=>setTerm(e.target.value)}
            />
           </div>
           <div className={`absolute bg-white z-50 flex flex-col w-full  shadow-lg  rounded-b-3xl
                          focus-within:shadow-lg pb-4  ${showHistory?'':'hidden'}`}>
              <Recommendation key={key} term={ term }  setTerm={setTerm}/> {/* not this application of nullish coalence */}
           </div>
        </div>
        
        <div className="mt-5">
          <button onClick={search} 
          class="bg-gray-100 ring-pink-300   focus:outline-none  text-gray-800
           hover:bg-primary-500 hover:shadow-lg hover:text-white font-semibold py-2 
           px-6 rounded-full transition duration-300 ease-in-out ">
            Search
          </button>
        </div>
      </form>
    </div>
   
  )
}
